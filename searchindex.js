Search.setIndex({"docnames": ["index", "installation", "thirdaibase", "thirdaibolt", "thirdailicensing", "thirdailog", "thirdaineuraldb"], "filenames": ["index.rst", "installation.rst", "thirdaibase.rst", "thirdaibolt.rst", "thirdailicensing.rst", "thirdailog.rst", "thirdaineuraldb.rst"], "titles": ["thirdai", "Installation", "thirdai", "thirdai.bolt", "thirdai.licensing", "thirdai.logging", "thirdai.neural_db"], "terms": {"To": [0, 1, 3], "get": [0, 6], "access": [0, 4, 6], "our": [0, 1, 3], "packag": [0, 1, 2], "refer": [0, 3, 6], "com": [0, 5], "instal": 0, "licens": 0, "set_global_num_thread": [0, 2], "neural_db": 0, "neuraldb": 0, "__init__": [0, 3, 6], "associ": [0, 3, 6], "associate_batch": [0, 6], "clear_sourc": [0, 6], "delet": [0, 6], "from_checkpoint": [0, 6], "from_udt": [0, 6], "get_associate_sampl": [0, 6], "get_rlhf_sampl": [0, 6], "get_upvote_sampl": [0, 6], "insert": [0, 6], "pretrain_distribut": [0, 6], "ready_to_search": [0, 6], "retrain": [0, 6], "save": [0, 3, 6], "search": [0, 3], "search_batch": [0, 6], "sourc": [0, 3, 6], "supervised_train": [0, 6], "supervised_train_with_ref_id": [0, 6], "text_to_result": [0, 6], "text_to_result_batch": [0, 6], "context": [0, 3, 6], "id": [0, 3, 6], "metadata": [0, 3, 6], "score": [0, 6], "text": [0, 3, 6], "upvote_id": [0, 6], "sup": [0, 6], "size": [0, 3, 6], "document": [0, 3], "type": 0, "csv": [0, 3, 6], "pdf": [0, 6], "docx": [0, 6], "url": [0, 6], "sqldatabas": [0, 6], "salesforc": [0, 6], "sharepoint": [0, 6], "sentencelevelpdf": [0, 6], "sentenceleveldocx": [0, 6], "inmemorytext": [0, 6], "constrain": 0, "anyof": [0, 6], "equalto": [0, 6], "greaterthan": [0, 6], "lessthan": [0, 6], "inrang": [0, 6], "enterpris": 0, "python": [0, 1, 2, 5], "client": [0, 5], "neuraldbcli": [0, 6], "modelbazaar": [0, 6], "bolt": [0, 6], "udt": [0, 6], "universaldeeptransform": [0, 3, 6], "valid": [0, 1, 3], "input": 0, "column": [0, 6], "columntyp": [0, 3], "categor": [0, 3], "date": [0, 3], "neighbor": [0, 3], "node_id": [0, 3], "numer": [0, 3], "sequenc": [0, 3, 6], "tempor": 0, "option": [0, 6], "temporalconfig": [0, 3], "log": [0, 6], "setup": [0, 6], "trace": [0, 5], "debug": [0, 5], "info": [0, 5], "warn": [0, 5], "error": [0, 5, 6], "critic": [0, 5], "licensest": [0, 4], "activ": [0, 4], "deactiv": [0, 4], "set_path": [0, 1, 4], "start_heartbeat": [0, 4], "ar": [1, 3, 5, 6], "releas": 1, "via": [1, 5, 6], "pypi": 1, "latest": [1, 6], "version": [1, 6], "thirdai": 1, "us": [1, 2, 3, 5, 6], "your": [1, 3, 5, 6], "": [1, 3], "pip": 1, "python3": 1, "m": [1, 3, 5], "The": [1, 2, 3, 5, 6], "abov": [1, 3], "system": [1, 3, 6], "In": [1, 6], "order": [1, 3, 6], "you": [1, 3, 6], "need": [1, 3, 6], "from": [1, 3, 5, 6], "By": 1, "default": [1, 3, 5, 6], "check": 1, "current": [1, 3, 4, 6], "work": [1, 3], "directori": [1, 6], "If": [1, 3, 6], "differ": [1, 3, 6], "locat": [1, 6], "mai": [1, 3, 4, 5, 6], "inform": [1, 3, 6], "max_num_thread": 2, "int": [2, 3, 4, 5, 6], "none": [2, 3, 4, 5, 6], "set": [2, 3, 4, 5, 6], "maximum": [2, 3, 6], "number": [2, 3, 6], "thread": 2, "ani": [2, 4, 6], "futur": [2, 3, 4], "call": [2, 4, 6], "librari": [2, 5, 6], "class": [3, 4, 6], "base": [3, 4, 6], "pybind11_object": [3, 4], "arg": [3, 6], "kwarg": [3, 6], "overload": 3, "function": [3, 4, 5, 6], "self": [3, 6], "_thirdai": 3, "data_typ": 3, "dict": [3, 6], "str": [3, 4, 5, 6], "automl": 3, "datatyp": 3, "temporal_tracking_relationship": 3, "list": [3, 6], "union": [3, 6], "target": [3, 6], "n_target_class": 3, "integer_target": 3, "bool": [3, 4, 5, 6], "fals": [3, 4, 5, 6], "time_granular": 3, "daili": 3, "lookahead": 3, "0": [3, 6], "delimit": 3, "model_config": 3, "constructor": 3, "paramet": [3, 5, 6], "A": [3, 6], "map": [3, 6], "name": [3, 6], "thi": [3, 5, 6], "specifi": [3, 6], "we": [3, 6], "want": [3, 6], "pass": [3, 6], "model": [3, 6], "doe": 3, "includ": 3, "all": [3, 6], "dataset": [3, 6], "i": [3, 5, 6], "one": 3, "see": [3, 5], "detail": 3, "non": 3, "empti": [3, 5, 6], "must": [3, 6], "onli": [3, 6], "contain": [3, 6], "string": [3, 5, 6], "yyyi": 3, "mm": 3, "dd": 3, "format": [3, 5, 6], "either": [3, 6], "other": [3, 6], "object": [3, 6], "tell": 3, "what": [3, 6], "can": [3, 5, 6], "track": 3, "over": [3, 6], "time": [3, 6], "each": [3, 6], "kei": [3, 4, 6], "For": [3, 6], "exampl": [3, 6], "user": [3, 6], "watch": 3, "histori": 3, "like": [3, 6], "user_id": [3, 6], "movie_id": 3, "provid": [3, 6], "configur": [3, 5, 6], "autotun": 3, "achiev": 3, "finer": 3, "grain": 3, "control": [3, 6], "intead": 3, "valu": [3, 6], "predict": 3, "ha": [3, 6], "whether": [3, 6], "integ": 3, "rang": [3, 6], "1": [3, 6], "d": 3, "weekli": 3, "w": 3, "biweekli": 3, "b": [3, 6], "monthli": 3, "interv": [3, 5, 6], "should": [3, 6], "featur": 3, "club": 3, "accord": 3, "granular": 3, "e": [3, 6], "g": [3, 6], "dai": 3, "2": [3, 6], "345": 3, "25": 3, "201": 3, "respect": 3, "captur": [3, 6], "singl": [3, 5], "546": 3, "26": 3, "week": 3, "instead": [3, 6], "individu": 3, "two": [3, 6], "how": [3, 6], "far": 3, "length": 3, "term": [3, 6], "5": [3, 6], "mean": [3, 6], "learn": [3, 6], "charact": 3, "separ": 3, "train": [3, 6], "overwrit": 3, "custom": [3, 5], "defin": 3, "given": [3, 6], "config": 3, "file": [3, 5, 6], "suppos": [3, 6], "row": [3, 6], "data": [3, 6], "follow": [3, 5, 6], "product_id": 3, "timestamp": 3, "ad_spend": 3, "sales_quant": 3, "sales_perform": 3, "next": 3, "sale": 3, "perform": [3, 6], "product": [3, 6], "would": [3, 6], "both": [3, 6], "ad": [3, 6], "spend": 3, "quantiti": 3, "10000": [3, 6], "20": 3, "multipl": 3, "same": [3, 6], "variabl": 3, "last": 3, "column_nam": [3, 6], "history_length": 3, "10": [3, 5, 6], "ahead": 3, "altern": 3, "hours_watch": 3, "build": [3, 6], "movi": 3, "recommend": 3, "Then": 3, "hour": 3, "3000": 3, "note": [3, 6], "better": 3, "understand": 3, "source_column": 3, "target_column": 3, "dataset_s": 3, "use_spell_check": 3, "queri": [3, 6], "augment": 3, "its": 3, "directli": 3, "supervis": [3, 6], "where": [3, 6], "incorrect": 3, "correct": [3, 6], "pair": [3, 6], "an": [3, 6], "unsupervis": [3, 6], "factor": 3, "creat": [3, 6], "small": 3, "medium": 3, "larg": [3, 6], "have": [3, 5, 6], "consist": 3, "grammat": 3, "syntact": 3, "reformul": 3, "assum": [3, 6], "also": [3, 6], "initi": [3, 6], "queries_for_predict": 3, "incorrect_queri": 3, "file_format": 3, "input_dim": 3, "source_target_sampl": 3, "tupl": [3, 6], "n_bucket": 3, "n_association_sampl": 3, "16": 3, "n_balancing_sampl": 3, "50": 3, "learning_r": [3, 6], "float": [3, 6], "001": [3, 6], "epoch": [3, 6], "3": [3, 5, 6], "associate_cold_start": 3, "filenam": 3, "strong_column_nam": 3, "weak_column_nam": 3, "metric": [3, 6], "batch_siz": [3, 6], "verbos": [3, 4], "true": [3, 5, 6], "associate_cold_start_data_sourc": 3, "balancing_data": 3, "datasourc": 3, "trainopt": 3, "associate_train": 3, "associate_train_data_sourc": 3, "checkpoint": [3, 6], "class_nam": 3, "arg0": [3, 5], "clear_graph": 3, "clear_index": 3, "cold_start": 3, "variable_length": [3, 6], "transform": [3, 6], "variablelengthconfig": [3, 6], "callback": [3, 6], "max_in_memory_batch": [3, 6], "logging_interv": 3, "comm": 3, "shuffle_reservoir_s": 3, "64000": 3, "cold_start_on_data_sourc": 3, "data_sourc": 3, "embedding_represent": 3, "input_sampl": 3, "enable_rlhf": 3, "num_balancing_doc": 3, "1000": 3, "num_balancing_samples_per_doc": 3, "evalu": [3, 6], "use_sparse_infer": 3, "top_k": [3, 6], "evaluate_on_data_sourc": 3, "explain": [3, 6], "target_class": 3, "forget": 3, "label": [3, 6], "get_entity_embed": 3, "label_id": 3, "get_index": 3, "machindex": 3, "get_paramet": 3, "numpi": 3, "ndarrai": 3, "float32": 3, "index": [3, 6], "index_batch": 3, "index_nod": 3, "index_nodes_on_data_sourc": 3, "insert_into_neural_db": 3, "introduce_docu": 3, "num_buckets_to_sampl": [3, 6], "num_random_hash": 3, "sort_random_hash": 3, "insert_into_neural_db_batch": 3, "fast_approxim": [3, 6], "introduce_documents_on_data_sourc": 3, "introduce_label": 3, "input_batch": 3, "is_v1": 3, "static": [3, 6], "load": [3, 6], "load_neural_db": 3, "model_dim": 3, "output_correct": 3, "sampl": [3, 6], "sparse_infer": 3, "num_hash": 3, "parallel_infer": 3, "batch": [3, 6], "return_predicted_class": 3, "predict_batch": 3, "predict_hash": 3, "force_non_empti": 3, "predict_hashes_batch": 3, "pretrain_neural_db": 3, "reset_neural_db": 3, "reset_temporal_track": 3, "save_cpp_classifi": 3, "save_path": 3, "save_neural_db": 3, "score_batch": 3, "set_decode_param": 3, "top_k_to_return": 3, "num_buckets_to_ev": 3, "set_index": 3, "set_mach_sampling_threshold": 3, "set_output_spars": 3, "sparsiti": 3, "rebuild_hash_t": 3, "modifi": 3, "output": 3, "layer": 3, "classifi": 3, "without": 3, "extrem": 3, "classif": 3, "enabl": 3, "rebuild": 3, "hash": [3, 6], "tabl": [3, 6], "finetun": 3, "set_paramet": 3, "teach_concept_associ": 3, "text_dataset_config": 3, "textdatasetconfig": 3, "train_batch": 3, "train_neural_db": 3, "train_on_data_sourc": 3, "train_with_hash": 3, "upvot": [3, 6], "n_upvote_sampl": 3, "verify_can_distribut": 3, "store": [3, 5, 6], "necessari": 3, "dure": [3, 6], "comput": [3, 6], "between": [3, 6], "instanc": [3, 6], "everi": 3, "done": 3, "after": 3, "when": [3, 6], "spars": 3, "infer": 3, "categorical_accuraci": 3, "properti": [3, 6], "sparse_valid": 3, "steps_per_valid": 3, "track_last_n": 3, "per": 3, "column_known_during_infer": 3, "known": [3, 6], "use_metadata": 3, "n": 3, "item": 3, "correspond": [3, 6], "ignor": 3, "ad_spend_level": 3, "level": [3, 5, 6], "do": [3, 5, 6], "more": [3, 6], "than": [3, 6], "onc": [3, 6], "allow": [3, 6], "u": 3, "short": 3, "long": [3, 6], "trend": 3, "key_column_nam": 3, "process": [3, 6], "enrich": 3, "main": 3, "illustr": 3, "content": [3, 6], "look": 3, "someth": [3, 6], "a526": 3, "b894": 3, "2022": 3, "01": 3, "a339": 3, "b801": 3, "a293": 3, "addit": [3, 6], "about": [3, 6], "ag": 3, "group": 3, "genr": 3, "new": [3, 6], "wast": 3, "becaus": 3, "repeat": 3, "mani": [3, 6], "throughout": 3, "put": 3, "them": 3, "inject": 3, "appropri": 3, "path": [3, 5, 6], "whose": [3, 6], "back": 3, "argument": [3, 6], "line": [3, 6], "open": 3, "user_meta": 3, "print": [3, 5], "52": 3, "a531": 3, "22": 3, "29": 3, "treat": 3, "popul": 3, "expect": [3, 6], "min": 3, "max": 3, "accur": 3, "test": 3, "One": 3, "extrasmal": 3, "x": 3, "l": [3, 5], "extralarg": 3, "xl": 3, "max_length": 3, "recurs": 3, "requir": [3, 5, 6], "longer": 3, "element": [3, 6], "beyond": 3, "upper": 3, "bound": 3, "input_sequ": 3, "t": [3, 5], "output_sequ": 3, "30": 3, "token": 3, "word": [3, 6], "contextual_encod": 3, "lowercas": 3, "matter": 3, "descript": [3, 6], "bio": 3, "punct": 3, "char": 3, "k": 3, "local": [3, 6], "global": 3, "ngram": 3, "user_motto": 3, "user_bio": 3, "wordpiecetoken": 3, "amount": [3, 6], "api_kei": 4, "api": [4, 6], "authent": 4, "fail": 4, "license_path": 4, "filepath": 4, "license_server_url": 4, "heartbeat_timeout": 4, "start": [4, 5, 6], "heartbeat": 4, "endpoint": 4, "remain": [4, 6], "intern": 5, "spdlog": 5, "within": [5, 6], "c": 5, "program": 5, "further": 5, "capabl": 5, "write": 5, "expos": 5, "so": [5, 6], "sychron": 5, "place": 5, "log_to_stderr": 5, "pattern": 5, "y": 5, "dt": 5, "v": 5, "flush_interv": 5, "up": [5, 6], "standard": 5, "turn": 5, "off": 5, "impli": 5, "upto": 5, "choic": 5, "http": [5, 6], "github": 5, "gabim": 5, "wiki": 5, "second": 5, "which": [5, 6], "flush": 5, "while": [5, 6], "oper": 5, "bind": 5, "avail": [5, 6], "retriev": 6, "knowledg": 6, "It": 6, "rag": 6, "pipelin": 6, "phase": 6, "ndb": 6, "result": 6, "make": 6, "chocol": 6, "chip": 6, "cooki": 6, "number_model": 6, "construct": 6, "identifi": 6, "session": 6, "shard": 6, "return": 6, "strength": 6, "strong": 6, "teach": 6, "underli": 6, "similar": 6, "concept": 6, "resembl": 6, "asap": 6, "soon": 6, "possibl": 6, "401k": 6, "retir": 6, "text_pair": 6, "appli": 6, "remov": 6, "source_id": 6, "checkpoint_path": 6, "on_progress": 6, "callabl": 6, "no_op": 6, "reload": 6, "pretrain": 6, "progress": 6, "csv_id_column": 6, "csv_strong_column": 6, "csv_weak_column": 6, "csv_reference_column": 6, "instanti": 6, "usual": 6, "port": 6, "relat": 6, "suppli": 6, "being": 6, "signal": 6, "weak": 6, "past": 6, "on_success": 6, "on_error": 6, "cancel_st": 6, "cancelst": 6, "checkpoint_config": 6, "trainer": 6, "checkpointconfig": 6, "resourc": 6, "databas": 6, "doc": 6, "undergo": 6, "much": 6, "faster": 6, "slight": 6, "drop": 6, "balac": 6, "entiti": 6, "invok": 6, "finish": 6, "successfulli": 6, "taht": 6, "occur": 6, "stop": 6, "ongo": 6, "primarili": 6, "pocketllm": 6, "limit": 6, "memori": 6, "lower": 6, "paradigm": 6, "No": 6, "unspecifi": 6, "assign": 6, "scaling_config": 6, "run_config": 6, "communication_backend": 6, "gloo": 6, "log_fold": 6, "distribut": 6, "manner": 6, "scale": 6, "aspect": 6, "rai": 6, "read": 6, "io": 6, "en": 6, "scalingconfig": 6, "html": 6, "runtim": 6, "runconfig": 6, "storage_path": 6, "network": 6, "cloud": 6, "storag": 6, "worker": 6, "7": 6, "onward": 6, "rate": 6, "optim": 6, "determin": 6, "automat": 6, "stream": 6, "support": 6, "too": 6, "fit": 6, "torch": 6, "commun": 6, "backend": 6, "inter": 6, "sure": 6, "id_column": 6, "ascend": 6, "resume_from_checkpoint": 6, "air": 6, "basic": 6, "ensur": 6, "compat": 6, "hardwar": 6, "mpi": 6, "been": 6, "prepar": 6, "serv": 6, "otherwis": 6, "element_id": 6, "0001": 6, "rlhf": 6, "save_to": 6, "pathlib": 6, "constraint": 6, "rerank": 6, "top_k_rerank": 6, "100": 6, "rerank_threshold": 6, "top_k_threshold": 6, "relev": 6, "dictionari": 6, "field": 6, "certain": 6, "form": 6, "metadata_kei": 6, "explicit": 6, "filter": 6, "step": 6, "candid": 6, "befor": 6, "under": 6, "threshold": 6, "averag": 6, "first": 6, "thu": 6, "increas": 6, "caus": 6, "top": 6, "obtain": 6, "4": 6, "below": 6, "2x": 6, "match": 6, "along": 6, "file_typ": 6, "file_cr": 6, "run": 6, "throughput": 6, "combin": 6, "db": 6, "know": 6, "specif": 6, "sport": 6, "catalog": 6, "furnitur": 6, "categori": 6, "method": 6, "query_column": 6, "id_delimit": 6, "result_id": 6, "text_id_pair": 6, "radiu": 6, "case": 6, "uses_db_id": 6, "convert": 6, "strong_column": 6, "strongest": 6, "could": 6, "weak_column": 6, "weaker": 6, "reference_column": 6, "respons": 6, "restrict": 6, "save_extra_info": 6, "index_column": 6, "has_offset": 6, "all_entity_id": 6, "filter_entity_id": 6, "id_map": 6, "load_meta": 6, "matched_constraint": 6, "row_iter": 6, "save_meta": 6, "strong_text": 6, "strong_text_from_row": 6, "valid_id_column": 6, "weak_text": 6, "weak_text_from_row": 6, "extract": 6, "pars": 6, "chunk": 6, "chunk_siz": 6, "stride": 6, "overlap": 6, "40": 6, "adjac": 6, "60": 6, "emphasize_first_word": 6, "begin": 6, "titl": 6, "ignore_header_foot": 6, "parser": 6, "header": 6, "footer": 6, "ignore_nonstandard_orient": 6, "nonstandard": 6, "orient": 6, "margin": 6, "vertic": 6, "v1": 6, "highlighted_doc": 6, "process_data": 6, "datafram": 6, "take": 6, "found": 6, "repons": 6, "url_respons": 6, "request": 6, "sent": 6, "title_is_strong": 6, "constraintvalu": 6, "documentconnector": 6, "handl": 6, "sql": 6, "connect": 6, "encapsul": 6, "execut": 6, "engin": 6, "table_nam": 6, "id_col": 6, "assert_valid_column": 6, "assert_valid_id": 6, "chunk_iter": 6, "get_engin": 6, "get_strong_column": 6, "get_weak_column": 6, "documentmanag": 6, "meta_t": 6, "id_in_docu": 6, "meta_data": 6, "fetch": 6, "minim": 6, "lost": 6, "setup_connect": 6, "helper": 6, "re": 6, "establish": 6, "upon": 6, "sqlalchemi": 6, "strong_text_from_chunk": 6, "id_in_chunk": 6, "weak_text_from_chunk": 6, "languag": 6, "soql": 6, "bulk": 6, "object_nam": 6, "assert_field_inclus": 6, "all_field": 6, "ordereddict": 6, "assert_field_typ": 6, "supported_text_typ": 6, "assert_valid_field": 6, "textarea": 6, "default_field": 6, "ctx": 6, "clientcontext": 6, "library_path": 6, "server": 6, "rel": 6, "share": 6, "byte": 6, "10mb": 6, "10485760": 6, "build_meta_t": 6, "dummy_queri": 6, "setup_clientcontext": 6, "base_url": 6, "credenti": 6, "usernam": 6, "password": 6, "OR": 6, "client_id": 6, "client_secret": 6, "sentencelevelextract": 6, "sentenc": 6, "entri": 6, "itself": 6, "paragraph": 6, "came": 6, "produc": 6, "displai": 6, "recal": 6, "wrapper": 6, "around": 6, "framework": 6, "global_metadata": 6, "whole": 6, "contraint": 6, "itemt": 6, "iter": 6, "value_to_item": 6, "sorteddict": 6, "filter_df_column": 6, "df": 6, "minimum": 6, "include_equ": 6, "inclusive_min": 6, "inclusive_max": 6, "deploi": 6, "model_bazaar": 6, "bazaar_cli": 6, "interact": 6, "deployment_identifi": 6, "deploy": 6, "downvot": 6, "reference_id": 6, "query_text": 6, "bazaar": 6, "repres": 6, "manag": 6, "_base_url": 6, "_cache_dir": 6, "cach": 6, "download": 6, "cache_dir": 6, "bazaar_cach": 6, "sign_up": 6, "email": 6, "sign": 6, "log_in": 6, "attribut": 6, "push_model": 6, "model_nam": 6, "local_path": 6, "access_level": 6, "public": 6, "push": 6, "pull_model": 6, "model_identifi": 6, "pull": 6, "list_model": 6, "is_async": 6, "base_model_identifi": 6, "await_train": 6, "wait": 6, "complet": 6, "deployment_nam": 6, "await_deploi": 6, "ndb_client": 6, "undeploi": 6, "list_deploy": 6, "asynchron": 6, "desir": 6, "doc_typ": 6, "train_extra_opt": 6, "nf": 6, "s3": 6}, "objects": {"": [[2, 0, 0, "module-thirdai", "thirdai()"]], "thirdai.bolt": [[3, 1, 1, "", "UniversalDeepTransformer"], [3, 1, 1, "", "Validation"], [3, 0, 0, "module-thirdai.bolt.temporal", "temporal()"], [3, 0, 0, "module-thirdai.bolt.types", "types()"]], "thirdai.bolt.UniversalDeepTransformer": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "associate"], [3, 2, 1, "", "associate_cold_start"], [3, 2, 1, "", "associate_cold_start_data_source"], [3, 2, 1, "", "associate_train"], [3, 2, 1, "", "associate_train_data_source"], [3, 2, 1, "", "checkpoint"], [3, 2, 1, "", "class_name"], [3, 2, 1, "", "clear_graph"], [3, 2, 1, "", "clear_index"], [3, 2, 1, "", "cold_start"], [3, 2, 1, "", "cold_start_on_data_source"], [3, 2, 1, "", "embedding_representation"], [3, 2, 1, "", "enable_rlhf"], [3, 2, 1, "", "evaluate"], [3, 2, 1, "", "evaluate_on_data_source"], [3, 2, 1, "", "explain"], [3, 2, 1, "", "forget"], [3, 2, 1, "", "get_entity_embedding"], [3, 2, 1, "", "get_index"], [3, 2, 1, "", "get_parameters"], [3, 2, 1, "", "index"], [3, 2, 1, "", "index_batch"], [3, 2, 1, "", "index_nodes"], [3, 2, 1, "", "index_nodes_on_data_source"], [3, 2, 1, "", "insert_into_neural_db"], [3, 2, 1, "", "insert_into_neural_db_batch"], [3, 2, 1, "", "introduce_document"], [3, 2, 1, "", "introduce_documents"], [3, 2, 1, "", "introduce_documents_on_data_source"], [3, 2, 1, "", "introduce_label"], [3, 2, 1, "", "is_v1"], [3, 2, 1, "", "load"], [3, 2, 1, "", "load_neural_db"], [3, 2, 1, "", "model_dims"], [3, 2, 1, "", "output_correctness"], [3, 2, 1, "", "parallel_inference"], [3, 2, 1, "", "predict"], [3, 2, 1, "", "predict_batch"], [3, 2, 1, "", "predict_hashes"], [3, 2, 1, "", "predict_hashes_batch"], [3, 2, 1, "", "pretrain_neural_db"], [3, 2, 1, "", "query"], [3, 2, 1, "", "reset_neural_db"], [3, 2, 1, "", "reset_temporal_trackers"], [3, 2, 1, "", "save"], [3, 2, 1, "", "save_cpp_classifier"], [3, 2, 1, "", "save_neural_db"], [3, 2, 1, "", "score_batch"], [3, 2, 1, "", "set_decode_params"], [3, 2, 1, "", "set_index"], [3, 2, 1, "", "set_mach_sampling_threshold"], [3, 2, 1, "", "set_output_sparsity"], [3, 2, 1, "", "set_parameters"], [3, 2, 1, "", "teach_concept_association"], [3, 2, 1, "", "text_dataset_config"], [3, 2, 1, "", "train"], [3, 2, 1, "", "train_batch"], [3, 2, 1, "", "train_neural_db"], [3, 2, 1, "", "train_on_data_source"], [3, 2, 1, "", "train_with_hashes"], [3, 2, 1, "", "upvote"], [3, 2, 1, "", "verify_can_distribute"]], "thirdai.bolt.Validation": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "filename"], [3, 3, 1, "", "metrics"], [3, 3, 1, "", "sparse_validation"], [3, 3, 1, "", "steps_per_validation"]], "thirdai.bolt.temporal": [[3, 1, 1, "", "TemporalConfig"], [3, 4, 1, "", "categorical"], [3, 4, 1, "", "numerical"]], "thirdai.bolt.types": [[3, 1, 1, "", "ColumnType"], [3, 1, 1, "", "categorical"], [3, 1, 1, "", "date"], [3, 1, 1, "", "metadata"], [3, 1, 1, "", "neighbors"], [3, 1, 1, "", "node_id"], [3, 1, 1, "", "numerical"], [3, 1, 1, "", "sequence"], [3, 1, 1, "", "text"]], "thirdai.bolt.types.categorical": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "delimiter"]], "thirdai.bolt.types.date": [[3, 2, 1, "", "__init__"]], "thirdai.bolt.types.metadata": [[3, 2, 1, "", "__init__"]], "thirdai.bolt.types.neighbors": [[3, 2, 1, "", "__init__"]], "thirdai.bolt.types.node_id": [[3, 2, 1, "", "__init__"]], "thirdai.bolt.types.numerical": [[3, 2, 1, "", "__init__"]], "thirdai.bolt.types.sequence": [[3, 2, 1, "", "__init__"]], "thirdai.bolt.types.text": [[3, 2, 1, "", "__init__"]], "thirdai": [[4, 0, 0, "module-thirdai.licensing", "licensing()"], [2, 4, 1, "", "set_global_num_threads"]], "thirdai.licensing": [[4, 1, 1, "", "LicenseState"], [4, 4, 1, "", "activate"], [4, 4, 1, "", "deactivate"], [4, 4, 1, "", "set_path"], [4, 4, 1, "", "start_heartbeat"]], "thirdai.logging": [[5, 4, 1, "", "critical"], [5, 4, 1, "", "debug"], [5, 4, 1, "", "error"], [5, 4, 1, "", "info"], [5, 4, 1, "", "setup"], [5, 4, 1, "", "trace"], [5, 4, 1, "", "warn"]], "thirdai.neural_db": [[6, 1, 1, "", "AnyOf"], [6, 1, 1, "", "CSV"], [6, 1, 1, "", "DOCX"], [6, 1, 1, "", "EqualTo"], [6, 1, 1, "", "GreaterThan"], [6, 1, 1, "", "InMemoryText"], [6, 1, 1, "", "InRange"], [6, 1, 1, "", "LessThan"], [6, 1, 1, "", "ModelBazaar"], [6, 1, 1, "", "NeuralDB"], [6, 1, 1, "", "PDF"], [6, 1, 1, "", "Reference"], [6, 1, 1, "", "SQLDatabase"], [6, 1, 1, "", "SalesForce"], [6, 1, 1, "", "SentenceLevelDOCX"], [6, 1, 1, "", "SentenceLevelPDF"], [6, 1, 1, "", "SharePoint"], [6, 1, 1, "", "Sup"], [6, 1, 1, "", "URL"]], "thirdai.neural_db.AnyOf": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "filter"], [6, 2, 1, "", "filter_df_column"]], "thirdai.neural_db.CSV": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "all_entity_ids"], [6, 2, 1, "", "context"], [6, 2, 1, "", "filter_entity_ids"], [6, 3, 1, "", "hash"], [6, 2, 1, "", "id_map"], [6, 2, 1, "", "load_meta"], [6, 3, 1, "", "matched_constraints"], [6, 3, 1, "", "name"], [6, 2, 1, "", "reference"], [6, 2, 1, "", "row_iterator"], [6, 2, 1, "", "save_meta"], [6, 3, 1, "", "size"], [6, 2, 1, "", "strong_text"], [6, 2, 1, "", "strong_text_from_row"], [6, 2, 1, "", "valid_id_column"], [6, 2, 1, "", "weak_text"], [6, 2, 1, "", "weak_text_from_row"]], "thirdai.neural_db.DOCX": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "process_data"]], "thirdai.neural_db.EqualTo": [[6, 2, 1, "", "__init__"]], "thirdai.neural_db.GreaterThan": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "filter"], [6, 2, 1, "", "filter_df_column"]], "thirdai.neural_db.InMemoryText": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "all_entity_ids"], [6, 2, 1, "", "context"], [6, 2, 1, "", "filter_entity_ids"], [6, 3, 1, "", "hash"], [6, 2, 1, "", "load_meta"], [6, 3, 1, "", "matched_constraints"], [6, 3, 1, "", "name"], [6, 2, 1, "", "reference"], [6, 2, 1, "", "save_meta"], [6, 3, 1, "", "size"], [6, 2, 1, "", "strong_text"], [6, 2, 1, "", "weak_text"]], "thirdai.neural_db.InRange": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "filter"], [6, 2, 1, "", "filter_df_column"]], "thirdai.neural_db.LessThan": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "filter"], [6, 2, 1, "", "filter_df_column"]], "thirdai.neural_db.ModelBazaar": [[6, 2, 1, "", "__init__"], [6, 5, 1, "", "_base_url"], [6, 5, 1, "", "_cache_dir"], [6, 2, 1, "", "await_deploy"], [6, 2, 1, "", "await_train"], [6, 2, 1, "", "connect"], [6, 2, 1, "", "deploy"], [6, 2, 1, "id1", "list_deployments"], [6, 2, 1, "id2", "list_models"], [6, 2, 1, "", "log_in"], [6, 2, 1, "", "pull_model"], [6, 2, 1, "", "push_model"], [6, 2, 1, "", "sign_up"], [6, 2, 1, "", "train"], [6, 2, 1, "", "undeploy"]], "thirdai.neural_db.NeuralDB": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "associate"], [6, 2, 1, "", "associate_batch"], [6, 2, 1, "", "clear_sources"], [6, 2, 1, "", "delete"], [6, 2, 1, "", "from_checkpoint"], [6, 2, 1, "", "from_udt"], [6, 2, 1, "", "get_associate_samples"], [6, 2, 1, "", "get_rlhf_samples"], [6, 2, 1, "", "get_upvote_samples"], [6, 2, 1, "", "insert"], [6, 2, 1, "", "pretrain_distributed"], [6, 2, 1, "", "ready_to_search"], [6, 2, 1, "", "reference"], [6, 2, 1, "", "retrain"], [6, 2, 1, "", "save"], [6, 2, 1, "", "search"], [6, 2, 1, "", "search_batch"], [6, 2, 1, "", "sources"], [6, 2, 1, "", "supervised_train"], [6, 2, 1, "", "supervised_train_with_ref_ids"], [6, 2, 1, "", "text_to_result"], [6, 2, 1, "", "text_to_result_batch"]], "thirdai.neural_db.PDF": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "highlighted_doc"], [6, 2, 1, "", "process_data"]], "thirdai.neural_db.Reference": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "context"], [6, 3, 1, "", "id"], [6, 3, 1, "", "metadata"], [6, 3, 1, "", "score"], [6, 3, 1, "", "source"], [6, 3, 1, "", "text"], [6, 3, 1, "", "upvote_ids"]], "thirdai.neural_db.SQLDatabase": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "all_entity_ids"], [6, 2, 1, "", "assert_valid_columns"], [6, 2, 1, "", "assert_valid_id"], [6, 2, 1, "", "chunk_iterator"], [6, 2, 1, "", "get_engine"], [6, 2, 1, "", "get_strong_columns"], [6, 2, 1, "", "get_weak_columns"], [6, 3, 1, "", "hash"], [6, 3, 1, "", "matched_constraints"], [6, 3, 1, "", "meta_table"], [6, 3, 1, "", "name"], [6, 2, 1, "", "reference"], [6, 2, 1, "", "setup_connection"], [6, 3, 1, "", "size"], [6, 2, 1, "", "strong_text_from_chunk"], [6, 2, 1, "", "weak_text_from_chunk"]], "thirdai.neural_db.SalesForce": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "all_entity_ids"], [6, 2, 1, "", "assert_field_inclusion"], [6, 2, 1, "", "assert_field_type"], [6, 2, 1, "", "assert_valid_fields"], [6, 2, 1, "", "assert_valid_id"], [6, 2, 1, "", "chunk_iterator"], [6, 2, 1, "", "default_fields"], [6, 2, 1, "", "get_strong_columns"], [6, 2, 1, "", "get_weak_columns"], [6, 3, 1, "", "hash"], [6, 3, 1, "", "matched_constraints"], [6, 3, 1, "", "meta_table"], [6, 3, 1, "", "name"], [6, 2, 1, "", "reference"], [6, 2, 1, "", "row_iterator"], [6, 2, 1, "", "setup_connection"], [6, 3, 1, "", "size"], [6, 2, 1, "", "strong_text_from_chunk"], [6, 2, 1, "", "weak_text_from_chunk"]], "thirdai.neural_db.SentenceLevelDOCX": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "process_data"]], "thirdai.neural_db.SentenceLevelPDF": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "process_data"]], "thirdai.neural_db.SharePoint": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "all_entity_ids"], [6, 2, 1, "", "build_meta_table"], [6, 2, 1, "", "chunk_iterator"], [6, 2, 1, "", "dummy_query"], [6, 2, 1, "", "get_strong_columns"], [6, 2, 1, "", "get_weak_columns"], [6, 3, 1, "", "hash"], [6, 3, 1, "", "matched_constraints"], [6, 3, 1, "", "meta_table"], [6, 3, 1, "", "name"], [6, 2, 1, "", "reference"], [6, 2, 1, "", "setup_clientContext"], [6, 2, 1, "", "setup_connection"], [6, 3, 1, "", "size"]], "thirdai.neural_db.Sup": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "size"]], "thirdai.neural_db.URL": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "all_entity_ids"], [6, 2, 1, "", "context"], [6, 3, 1, "", "hash"], [6, 2, 1, "", "load_meta"], [6, 3, 1, "", "matched_constraints"], [6, 3, 1, "", "name"], [6, 2, 1, "", "process_data"], [6, 2, 1, "", "reference"], [6, 3, 1, "", "size"], [6, 2, 1, "", "strong_text"], [6, 2, 1, "", "weak_text"]], "thirdai.neural_db.model_bazaar.client.bazaar_client": [[6, 1, 1, "", "NeuralDBClient"]], "thirdai.neural_db.model_bazaar.client.bazaar_client.NeuralDBClient": [[6, 2, 1, "", "__init__"], [6, 2, 1, "id0", "associate"], [6, 5, 1, "", "base_url"], [6, 5, 1, "", "deployment_identifier"], [6, 2, 1, "", "downvote"], [6, 2, 1, "", "insert"], [6, 2, 1, "", "search"], [6, 2, 1, "", "upvote"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"thirdai": [0, 2, 3, 4, 5, 6], "instal": 1, "licens": [1, 4], "bolt": 3, "udt": 3, "input": 3, "column": 3, "type": [3, 6], "tempor": 3, "option": 3, "log": 5, "setup": 5, "neural_db": 6, "document": 6, "constrain": 6, "search": 6, "neuraldb": 6, "enterpris": 6, "python": 6, "client": 6}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"thirdai": [[0, "thirdai"], [2, "module-thirdai"]], "Installation": [[1, "installation"]], "License": [[1, "license"]], "thirdai.bolt": [[3, "thirdai-bolt"]], "UDT": [[3, "udt"]], "UDT Input Column Types": [[3, "module-thirdai.bolt.types"]], "UDT Temporal Options": [[3, "module-thirdai.bolt.temporal"]], "thirdai.licensing": [[4, "module-thirdai.licensing"]], "thirdai.logging": [[5, "thirdai-logging"]], "Setup": [[5, "setup"]], "Logging": [[5, "logging"]], "thirdai.neural_db": [[6, "thirdai-neural-db"]], "Document Types": [[6, "document-types"]], "Constrained Search": [[6, "constrained-search"]], "NeuralDB Enterprise Python Client": [[6, "neuraldb-enterprise-python-client"]]}, "indexentries": {"module": [[2, "module-thirdai"], [3, "module-thirdai.bolt.temporal"], [3, "module-thirdai.bolt.types"], [4, "module-thirdai.licensing"]], "set_global_num_threads() (in module thirdai)": [[2, "thirdai.set_global_num_threads"]], "thirdai()": [[2, "module-thirdai"]], "columntype (class in thirdai.bolt.types)": [[3, "thirdai.bolt.types.ColumnType"]], "temporalconfig (class in thirdai.bolt.temporal)": [[3, "thirdai.bolt.temporal.TemporalConfig"]], "universaldeeptransformer (class in thirdai.bolt)": [[3, "thirdai.bolt.UniversalDeepTransformer"]], "validation (class in thirdai.bolt)": [[3, "thirdai.bolt.Validation"]], "__init__() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.__init__"]], "__init__() (thirdai.bolt.validation method)": [[3, "thirdai.bolt.Validation.__init__"]], "__init__() (thirdai.bolt.types.categorical method)": [[3, "thirdai.bolt.types.categorical.__init__"]], "__init__() (thirdai.bolt.types.date method)": [[3, "thirdai.bolt.types.date.__init__"]], "__init__() (thirdai.bolt.types.metadata method)": [[3, "thirdai.bolt.types.metadata.__init__"]], "__init__() (thirdai.bolt.types.neighbors method)": [[3, "thirdai.bolt.types.neighbors.__init__"]], "__init__() (thirdai.bolt.types.node_id method)": [[3, "thirdai.bolt.types.node_id.__init__"]], "__init__() (thirdai.bolt.types.numerical method)": [[3, "thirdai.bolt.types.numerical.__init__"]], "__init__() (thirdai.bolt.types.sequence method)": [[3, "thirdai.bolt.types.sequence.__init__"]], "__init__() (thirdai.bolt.types.text method)": [[3, "thirdai.bolt.types.text.__init__"]], "associate() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.associate"]], "associate_cold_start() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.associate_cold_start"]], "associate_cold_start_data_source() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.associate_cold_start_data_source"]], "associate_train() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.associate_train"]], "associate_train_data_source() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.associate_train_data_source"]], "categorical (class in thirdai.bolt.types)": [[3, "thirdai.bolt.types.categorical"]], "categorical() (in module thirdai.bolt.temporal)": [[3, "thirdai.bolt.temporal.categorical"]], "checkpoint() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.checkpoint"]], "class_name() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.class_name"]], "clear_graph() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.clear_graph"]], "clear_index() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.clear_index"]], "cold_start() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.cold_start"]], "cold_start_on_data_source() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.cold_start_on_data_source"]], "date (class in thirdai.bolt.types)": [[3, "thirdai.bolt.types.date"]], "delimiter (thirdai.bolt.types.categorical property)": [[3, "thirdai.bolt.types.categorical.delimiter"]], "embedding_representation() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.embedding_representation"]], "enable_rlhf() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.enable_rlhf"]], "evaluate() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.evaluate"]], "evaluate_on_data_source() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.evaluate_on_data_source"]], "explain() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.explain"]], "filename (thirdai.bolt.validation property)": [[3, "thirdai.bolt.Validation.filename"]], "forget() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.forget"]], "get_entity_embedding() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.get_entity_embedding"]], "get_index() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.get_index"]], "get_parameters() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.get_parameters"]], "index() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.index"]], "index_batch() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.index_batch"]], "index_nodes() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.index_nodes"]], "index_nodes_on_data_source() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.index_nodes_on_data_source"]], "insert_into_neural_db() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.insert_into_neural_db"]], "insert_into_neural_db_batch() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.insert_into_neural_db_batch"]], "introduce_document() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.introduce_document"]], "introduce_documents() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.introduce_documents"]], "introduce_documents_on_data_source() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.introduce_documents_on_data_source"]], "introduce_label() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.introduce_label"]], "is_v1() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.is_v1"]], "load() (thirdai.bolt.universaldeeptransformer static method)": [[3, "thirdai.bolt.UniversalDeepTransformer.load"]], "load_neural_db() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.load_neural_db"]], "metadata (class in thirdai.bolt.types)": [[3, "thirdai.bolt.types.metadata"]], "metrics (thirdai.bolt.validation property)": [[3, "thirdai.bolt.Validation.metrics"]], "model_dims() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.model_dims"]], "neighbors (class in thirdai.bolt.types)": [[3, "thirdai.bolt.types.neighbors"]], "node_id (class in thirdai.bolt.types)": [[3, "thirdai.bolt.types.node_id"]], "numerical (class in thirdai.bolt.types)": [[3, "thirdai.bolt.types.numerical"]], "numerical() (in module thirdai.bolt.temporal)": [[3, "thirdai.bolt.temporal.numerical"]], "output_correctness() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.output_correctness"]], "parallel_inference() (thirdai.bolt.universaldeeptransformer static method)": [[3, "thirdai.bolt.UniversalDeepTransformer.parallel_inference"]], "predict() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.predict"]], "predict_batch() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.predict_batch"]], "predict_hashes() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.predict_hashes"]], "predict_hashes_batch() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.predict_hashes_batch"]], "pretrain_neural_db() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.pretrain_neural_db"]], "query() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.query"]], "reset_neural_db() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.reset_neural_db"]], "reset_temporal_trackers() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.reset_temporal_trackers"]], "save() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.save"]], "save_cpp_classifier() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.save_cpp_classifier"]], "save_neural_db() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.save_neural_db"]], "score_batch() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.score_batch"]], "sequence (class in thirdai.bolt.types)": [[3, "thirdai.bolt.types.sequence"]], "set_decode_params() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.set_decode_params"]], "set_index() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.set_index"]], "set_mach_sampling_threshold() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.set_mach_sampling_threshold"]], "set_output_sparsity() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.set_output_sparsity"]], "set_parameters() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.set_parameters"]], "sparse_validation (thirdai.bolt.validation property)": [[3, "thirdai.bolt.Validation.sparse_validation"]], "steps_per_validation (thirdai.bolt.validation property)": [[3, "thirdai.bolt.Validation.steps_per_validation"]], "teach_concept_association() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.teach_concept_association"]], "text (class in thirdai.bolt.types)": [[3, "thirdai.bolt.types.text"]], "text_dataset_config() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.text_dataset_config"]], "thirdai.bolt.temporal()": [[3, "module-thirdai.bolt.temporal"]], "thirdai.bolt.types()": [[3, "module-thirdai.bolt.types"]], "train() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.train"]], "train_batch() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.train_batch"]], "train_neural_db() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.train_neural_db"]], "train_on_data_source() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.train_on_data_source"]], "train_with_hashes() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.train_with_hashes"]], "upvote() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.upvote"]], "verify_can_distribute() (thirdai.bolt.universaldeeptransformer method)": [[3, "thirdai.bolt.UniversalDeepTransformer.verify_can_distribute"]], "licensestate (class in thirdai.licensing)": [[4, "thirdai.licensing.LicenseState"]], "activate() (in module thirdai.licensing)": [[4, "thirdai.licensing.activate"]], "deactivate() (in module thirdai.licensing)": [[4, "thirdai.licensing.deactivate"]], "set_path() (in module thirdai.licensing)": [[4, "thirdai.licensing.set_path"]], "start_heartbeat() (in module thirdai.licensing)": [[4, "thirdai.licensing.start_heartbeat"]], "thirdai.licensing()": [[4, "module-thirdai.licensing"]], "critical() (in module thirdai.logging)": [[5, "thirdai.logging.critical"]], "debug() (in module thirdai.logging)": [[5, "thirdai.logging.debug"]], "error() (in module thirdai.logging)": [[5, "thirdai.logging.error"]], "info() (in module thirdai.logging)": [[5, "thirdai.logging.info"]], "setup() (in module thirdai.logging)": [[5, "thirdai.logging.setup"]], "trace() (in module thirdai.logging)": [[5, "thirdai.logging.trace"]], "warn() (in module thirdai.logging)": [[5, "thirdai.logging.warn"]], "anyof (class in thirdai.neural_db)": [[6, "thirdai.neural_db.AnyOf"]], "csv (class in thirdai.neural_db)": [[6, "thirdai.neural_db.CSV"]], "docx (class in thirdai.neural_db)": [[6, "thirdai.neural_db.DOCX"]], "equalto (class in thirdai.neural_db)": [[6, "thirdai.neural_db.EqualTo"]], "greaterthan (class in thirdai.neural_db)": [[6, "thirdai.neural_db.GreaterThan"]], "inmemorytext (class in thirdai.neural_db)": [[6, "thirdai.neural_db.InMemoryText"]], "inrange (class in thirdai.neural_db)": [[6, "thirdai.neural_db.InRange"]], "lessthan (class in thirdai.neural_db)": [[6, "thirdai.neural_db.LessThan"]], "modelbazaar (class in thirdai.neural_db)": [[6, "thirdai.neural_db.ModelBazaar"]], "neuraldb (class in thirdai.neural_db)": [[6, "thirdai.neural_db.NeuralDB"]], "neuraldbclient (class in thirdai.neural_db.model_bazaar.client.bazaar_client)": [[6, "thirdai.neural_db.model_bazaar.client.bazaar_client.NeuralDBClient"]], "pdf (class in thirdai.neural_db)": [[6, "thirdai.neural_db.PDF"]], "reference (class in thirdai.neural_db)": [[6, "thirdai.neural_db.Reference"]], "sqldatabase (class in thirdai.neural_db)": [[6, "thirdai.neural_db.SQLDatabase"]], "salesforce (class in thirdai.neural_db)": [[6, "thirdai.neural_db.SalesForce"]], "sentenceleveldocx (class in thirdai.neural_db)": [[6, "thirdai.neural_db.SentenceLevelDOCX"]], "sentencelevelpdf (class in thirdai.neural_db)": [[6, "thirdai.neural_db.SentenceLevelPDF"]], "sharepoint (class in thirdai.neural_db)": [[6, "thirdai.neural_db.SharePoint"]], "sup (class in thirdai.neural_db)": [[6, "thirdai.neural_db.Sup"]], "url (class in thirdai.neural_db)": [[6, "thirdai.neural_db.URL"]], "__init__() (thirdai.neural_db.anyof method)": [[6, "thirdai.neural_db.AnyOf.__init__"]], "__init__() (thirdai.neural_db.csv method)": [[6, "thirdai.neural_db.CSV.__init__"]], "__init__() (thirdai.neural_db.docx method)": [[6, "thirdai.neural_db.DOCX.__init__"]], "__init__() (thirdai.neural_db.equalto method)": [[6, "thirdai.neural_db.EqualTo.__init__"]], "__init__() (thirdai.neural_db.greaterthan method)": [[6, "thirdai.neural_db.GreaterThan.__init__"]], "__init__() (thirdai.neural_db.inmemorytext method)": [[6, "thirdai.neural_db.InMemoryText.__init__"]], "__init__() (thirdai.neural_db.inrange method)": [[6, "thirdai.neural_db.InRange.__init__"]], "__init__() (thirdai.neural_db.lessthan method)": [[6, "thirdai.neural_db.LessThan.__init__"]], "__init__() (thirdai.neural_db.modelbazaar method)": [[6, "thirdai.neural_db.ModelBazaar.__init__"]], "__init__() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.__init__"]], "__init__() (thirdai.neural_db.pdf method)": [[6, "thirdai.neural_db.PDF.__init__"]], "__init__() (thirdai.neural_db.reference method)": [[6, "thirdai.neural_db.Reference.__init__"]], "__init__() (thirdai.neural_db.sqldatabase method)": [[6, "thirdai.neural_db.SQLDatabase.__init__"]], "__init__() (thirdai.neural_db.salesforce method)": [[6, "thirdai.neural_db.SalesForce.__init__"]], "__init__() (thirdai.neural_db.sentenceleveldocx method)": [[6, "thirdai.neural_db.SentenceLevelDOCX.__init__"]], "__init__() (thirdai.neural_db.sentencelevelpdf method)": [[6, "thirdai.neural_db.SentenceLevelPDF.__init__"]], "__init__() (thirdai.neural_db.sharepoint method)": [[6, "thirdai.neural_db.SharePoint.__init__"]], "__init__() (thirdai.neural_db.sup method)": [[6, "thirdai.neural_db.Sup.__init__"]], "__init__() (thirdai.neural_db.url method)": [[6, "thirdai.neural_db.URL.__init__"]], "__init__() (thirdai.neural_db.model_bazaar.client.bazaar_client.neuraldbclient method)": [[6, "thirdai.neural_db.model_bazaar.client.bazaar_client.NeuralDBClient.__init__"]], "_base_url (thirdai.neural_db.modelbazaar attribute)": [[6, "thirdai.neural_db.ModelBazaar._base_url"]], "_cache_dir (thirdai.neural_db.modelbazaar attribute)": [[6, "thirdai.neural_db.ModelBazaar._cache_dir"]], "all_entity_ids() (thirdai.neural_db.csv method)": [[6, "thirdai.neural_db.CSV.all_entity_ids"]], "all_entity_ids() (thirdai.neural_db.inmemorytext method)": [[6, "thirdai.neural_db.InMemoryText.all_entity_ids"]], "all_entity_ids() (thirdai.neural_db.sqldatabase method)": [[6, "thirdai.neural_db.SQLDatabase.all_entity_ids"]], "all_entity_ids() (thirdai.neural_db.salesforce method)": [[6, "thirdai.neural_db.SalesForce.all_entity_ids"]], "all_entity_ids() (thirdai.neural_db.sharepoint method)": [[6, "thirdai.neural_db.SharePoint.all_entity_ids"]], "all_entity_ids() (thirdai.neural_db.url method)": [[6, "thirdai.neural_db.URL.all_entity_ids"]], "assert_field_inclusion() (thirdai.neural_db.salesforce method)": [[6, "thirdai.neural_db.SalesForce.assert_field_inclusion"]], "assert_field_type() (thirdai.neural_db.salesforce method)": [[6, "thirdai.neural_db.SalesForce.assert_field_type"]], "assert_valid_columns() (thirdai.neural_db.sqldatabase method)": [[6, "thirdai.neural_db.SQLDatabase.assert_valid_columns"]], "assert_valid_fields() (thirdai.neural_db.salesforce method)": [[6, "thirdai.neural_db.SalesForce.assert_valid_fields"]], "assert_valid_id() (thirdai.neural_db.sqldatabase method)": [[6, "thirdai.neural_db.SQLDatabase.assert_valid_id"]], "assert_valid_id() (thirdai.neural_db.salesforce method)": [[6, "thirdai.neural_db.SalesForce.assert_valid_id"]], "associate() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.associate"]], "associate() (thirdai.neural_db.model_bazaar.client.bazaar_client.neuraldbclient method)": [[6, "id0"], [6, "thirdai.neural_db.model_bazaar.client.bazaar_client.NeuralDBClient.associate"]], "associate_batch() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.associate_batch"]], "await_deploy() (thirdai.neural_db.modelbazaar method)": [[6, "thirdai.neural_db.ModelBazaar.await_deploy"]], "await_train() (thirdai.neural_db.modelbazaar method)": [[6, "thirdai.neural_db.ModelBazaar.await_train"]], "base_url (thirdai.neural_db.model_bazaar.client.bazaar_client.neuraldbclient attribute)": [[6, "thirdai.neural_db.model_bazaar.client.bazaar_client.NeuralDBClient.base_url"]], "build_meta_table() (thirdai.neural_db.sharepoint method)": [[6, "thirdai.neural_db.SharePoint.build_meta_table"]], "chunk_iterator() (thirdai.neural_db.sqldatabase method)": [[6, "thirdai.neural_db.SQLDatabase.chunk_iterator"]], "chunk_iterator() (thirdai.neural_db.salesforce method)": [[6, "thirdai.neural_db.SalesForce.chunk_iterator"]], "chunk_iterator() (thirdai.neural_db.sharepoint method)": [[6, "thirdai.neural_db.SharePoint.chunk_iterator"]], "clear_sources() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.clear_sources"]], "connect() (thirdai.neural_db.modelbazaar method)": [[6, "thirdai.neural_db.ModelBazaar.connect"]], "context() (thirdai.neural_db.csv method)": [[6, "thirdai.neural_db.CSV.context"]], "context() (thirdai.neural_db.inmemorytext method)": [[6, "thirdai.neural_db.InMemoryText.context"]], "context() (thirdai.neural_db.reference method)": [[6, "thirdai.neural_db.Reference.context"]], "context() (thirdai.neural_db.url method)": [[6, "thirdai.neural_db.URL.context"]], "default_fields() (thirdai.neural_db.salesforce method)": [[6, "thirdai.neural_db.SalesForce.default_fields"]], "delete() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.delete"]], "deploy() (thirdai.neural_db.modelbazaar method)": [[6, "thirdai.neural_db.ModelBazaar.deploy"]], "deployment_identifier (thirdai.neural_db.model_bazaar.client.bazaar_client.neuraldbclient attribute)": [[6, "thirdai.neural_db.model_bazaar.client.bazaar_client.NeuralDBClient.deployment_identifier"]], "downvote() (thirdai.neural_db.model_bazaar.client.bazaar_client.neuraldbclient method)": [[6, "thirdai.neural_db.model_bazaar.client.bazaar_client.NeuralDBClient.downvote"]], "dummy_query() (thirdai.neural_db.sharepoint static method)": [[6, "thirdai.neural_db.SharePoint.dummy_query"]], "filter() (thirdai.neural_db.anyof method)": [[6, "thirdai.neural_db.AnyOf.filter"]], "filter() (thirdai.neural_db.greaterthan method)": [[6, "thirdai.neural_db.GreaterThan.filter"]], "filter() (thirdai.neural_db.inrange method)": [[6, "thirdai.neural_db.InRange.filter"]], "filter() (thirdai.neural_db.lessthan method)": [[6, "thirdai.neural_db.LessThan.filter"]], "filter_df_column() (thirdai.neural_db.anyof method)": [[6, "thirdai.neural_db.AnyOf.filter_df_column"]], "filter_df_column() (thirdai.neural_db.greaterthan method)": [[6, "thirdai.neural_db.GreaterThan.filter_df_column"]], "filter_df_column() (thirdai.neural_db.inrange method)": [[6, "thirdai.neural_db.InRange.filter_df_column"]], "filter_df_column() (thirdai.neural_db.lessthan method)": [[6, "thirdai.neural_db.LessThan.filter_df_column"]], "filter_entity_ids() (thirdai.neural_db.csv method)": [[6, "thirdai.neural_db.CSV.filter_entity_ids"]], "filter_entity_ids() (thirdai.neural_db.inmemorytext method)": [[6, "thirdai.neural_db.InMemoryText.filter_entity_ids"]], "from_checkpoint() (thirdai.neural_db.neuraldb static method)": [[6, "thirdai.neural_db.NeuralDB.from_checkpoint"]], "from_udt() (thirdai.neural_db.neuraldb static method)": [[6, "thirdai.neural_db.NeuralDB.from_udt"]], "get_associate_samples() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.get_associate_samples"]], "get_engine() (thirdai.neural_db.sqldatabase method)": [[6, "thirdai.neural_db.SQLDatabase.get_engine"]], "get_rlhf_samples() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.get_rlhf_samples"]], "get_strong_columns() (thirdai.neural_db.sqldatabase method)": [[6, "thirdai.neural_db.SQLDatabase.get_strong_columns"]], "get_strong_columns() (thirdai.neural_db.salesforce method)": [[6, "thirdai.neural_db.SalesForce.get_strong_columns"]], "get_strong_columns() (thirdai.neural_db.sharepoint method)": [[6, "thirdai.neural_db.SharePoint.get_strong_columns"]], "get_upvote_samples() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.get_upvote_samples"]], "get_weak_columns() (thirdai.neural_db.sqldatabase method)": [[6, "thirdai.neural_db.SQLDatabase.get_weak_columns"]], "get_weak_columns() (thirdai.neural_db.salesforce method)": [[6, "thirdai.neural_db.SalesForce.get_weak_columns"]], "get_weak_columns() (thirdai.neural_db.sharepoint method)": [[6, "thirdai.neural_db.SharePoint.get_weak_columns"]], "hash (thirdai.neural_db.csv property)": [[6, "thirdai.neural_db.CSV.hash"]], "hash (thirdai.neural_db.inmemorytext property)": [[6, "thirdai.neural_db.InMemoryText.hash"]], "hash (thirdai.neural_db.sqldatabase property)": [[6, "thirdai.neural_db.SQLDatabase.hash"]], "hash (thirdai.neural_db.salesforce property)": [[6, "thirdai.neural_db.SalesForce.hash"]], "hash (thirdai.neural_db.sharepoint property)": [[6, "thirdai.neural_db.SharePoint.hash"]], "hash (thirdai.neural_db.url property)": [[6, "thirdai.neural_db.URL.hash"]], "highlighted_doc() (thirdai.neural_db.pdf static method)": [[6, "thirdai.neural_db.PDF.highlighted_doc"]], "id (thirdai.neural_db.reference property)": [[6, "thirdai.neural_db.Reference.id"]], "id_map() (thirdai.neural_db.csv method)": [[6, "thirdai.neural_db.CSV.id_map"]], "insert() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.insert"]], "insert() (thirdai.neural_db.model_bazaar.client.bazaar_client.neuraldbclient method)": [[6, "thirdai.neural_db.model_bazaar.client.bazaar_client.NeuralDBClient.insert"]], "list_deployments() (thirdai.neural_db.modelbazaar method)": [[6, "id1"], [6, "thirdai.neural_db.ModelBazaar.list_deployments"]], "list_models() (thirdai.neural_db.modelbazaar method)": [[6, "id2"], [6, "thirdai.neural_db.ModelBazaar.list_models"]], "load_meta() (thirdai.neural_db.csv method)": [[6, "thirdai.neural_db.CSV.load_meta"]], "load_meta() (thirdai.neural_db.inmemorytext method)": [[6, "thirdai.neural_db.InMemoryText.load_meta"]], "load_meta() (thirdai.neural_db.url method)": [[6, "thirdai.neural_db.URL.load_meta"]], "log_in() (thirdai.neural_db.modelbazaar method)": [[6, "thirdai.neural_db.ModelBazaar.log_in"]], "matched_constraints (thirdai.neural_db.csv property)": [[6, "thirdai.neural_db.CSV.matched_constraints"]], "matched_constraints (thirdai.neural_db.inmemorytext property)": [[6, "thirdai.neural_db.InMemoryText.matched_constraints"]], "matched_constraints (thirdai.neural_db.sqldatabase property)": [[6, "thirdai.neural_db.SQLDatabase.matched_constraints"]], "matched_constraints (thirdai.neural_db.salesforce property)": [[6, "thirdai.neural_db.SalesForce.matched_constraints"]], "matched_constraints (thirdai.neural_db.sharepoint property)": [[6, "thirdai.neural_db.SharePoint.matched_constraints"]], "matched_constraints (thirdai.neural_db.url property)": [[6, "thirdai.neural_db.URL.matched_constraints"]], "meta_table (thirdai.neural_db.sqldatabase property)": [[6, "thirdai.neural_db.SQLDatabase.meta_table"]], "meta_table (thirdai.neural_db.salesforce property)": [[6, "thirdai.neural_db.SalesForce.meta_table"]], "meta_table (thirdai.neural_db.sharepoint property)": [[6, "thirdai.neural_db.SharePoint.meta_table"]], "metadata (thirdai.neural_db.reference property)": [[6, "thirdai.neural_db.Reference.metadata"]], "name (thirdai.neural_db.csv property)": [[6, "thirdai.neural_db.CSV.name"]], "name (thirdai.neural_db.inmemorytext property)": [[6, "thirdai.neural_db.InMemoryText.name"]], "name (thirdai.neural_db.sqldatabase property)": [[6, "thirdai.neural_db.SQLDatabase.name"]], "name (thirdai.neural_db.salesforce property)": [[6, "thirdai.neural_db.SalesForce.name"]], "name (thirdai.neural_db.sharepoint property)": [[6, "thirdai.neural_db.SharePoint.name"]], "name (thirdai.neural_db.url property)": [[6, "thirdai.neural_db.URL.name"]], "pretrain_distributed() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.pretrain_distributed"]], "process_data() (thirdai.neural_db.docx method)": [[6, "thirdai.neural_db.DOCX.process_data"]], "process_data() (thirdai.neural_db.pdf method)": [[6, "thirdai.neural_db.PDF.process_data"]], "process_data() (thirdai.neural_db.sentenceleveldocx method)": [[6, "thirdai.neural_db.SentenceLevelDOCX.process_data"]], "process_data() (thirdai.neural_db.sentencelevelpdf method)": [[6, "thirdai.neural_db.SentenceLevelPDF.process_data"]], "process_data() (thirdai.neural_db.url method)": [[6, "thirdai.neural_db.URL.process_data"]], "pull_model() (thirdai.neural_db.modelbazaar method)": [[6, "thirdai.neural_db.ModelBazaar.pull_model"]], "push_model() (thirdai.neural_db.modelbazaar method)": [[6, "thirdai.neural_db.ModelBazaar.push_model"]], "ready_to_search() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.ready_to_search"]], "reference() (thirdai.neural_db.csv method)": [[6, "thirdai.neural_db.CSV.reference"]], "reference() (thirdai.neural_db.inmemorytext method)": [[6, "thirdai.neural_db.InMemoryText.reference"]], "reference() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.reference"]], "reference() (thirdai.neural_db.sqldatabase method)": [[6, "thirdai.neural_db.SQLDatabase.reference"]], "reference() (thirdai.neural_db.salesforce method)": [[6, "thirdai.neural_db.SalesForce.reference"]], "reference() (thirdai.neural_db.sharepoint method)": [[6, "thirdai.neural_db.SharePoint.reference"]], "reference() (thirdai.neural_db.url method)": [[6, "thirdai.neural_db.URL.reference"]], "retrain() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.retrain"]], "row_iterator() (thirdai.neural_db.csv method)": [[6, "thirdai.neural_db.CSV.row_iterator"]], "row_iterator() (thirdai.neural_db.salesforce method)": [[6, "thirdai.neural_db.SalesForce.row_iterator"]], "save() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.save"]], "save_meta() (thirdai.neural_db.csv method)": [[6, "thirdai.neural_db.CSV.save_meta"]], "save_meta() (thirdai.neural_db.inmemorytext method)": [[6, "thirdai.neural_db.InMemoryText.save_meta"]], "score (thirdai.neural_db.reference property)": [[6, "thirdai.neural_db.Reference.score"]], "search() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.search"]], "search() (thirdai.neural_db.model_bazaar.client.bazaar_client.neuraldbclient method)": [[6, "thirdai.neural_db.model_bazaar.client.bazaar_client.NeuralDBClient.search"]], "search_batch() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.search_batch"]], "setup_clientcontext() (thirdai.neural_db.sharepoint static method)": [[6, "thirdai.neural_db.SharePoint.setup_clientContext"]], "setup_connection() (thirdai.neural_db.sqldatabase method)": [[6, "thirdai.neural_db.SQLDatabase.setup_connection"]], "setup_connection() (thirdai.neural_db.salesforce method)": [[6, "thirdai.neural_db.SalesForce.setup_connection"]], "setup_connection() (thirdai.neural_db.sharepoint method)": [[6, "thirdai.neural_db.SharePoint.setup_connection"]], "sign_up() (thirdai.neural_db.modelbazaar method)": [[6, "thirdai.neural_db.ModelBazaar.sign_up"]], "size (thirdai.neural_db.csv property)": [[6, "thirdai.neural_db.CSV.size"]], "size (thirdai.neural_db.inmemorytext property)": [[6, "thirdai.neural_db.InMemoryText.size"]], "size (thirdai.neural_db.sqldatabase property)": [[6, "thirdai.neural_db.SQLDatabase.size"]], "size (thirdai.neural_db.salesforce property)": [[6, "thirdai.neural_db.SalesForce.size"]], "size (thirdai.neural_db.sharepoint property)": [[6, "thirdai.neural_db.SharePoint.size"]], "size (thirdai.neural_db.sup property)": [[6, "thirdai.neural_db.Sup.size"]], "size (thirdai.neural_db.url property)": [[6, "thirdai.neural_db.URL.size"]], "source (thirdai.neural_db.reference property)": [[6, "thirdai.neural_db.Reference.source"]], "sources() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.sources"]], "strong_text() (thirdai.neural_db.csv method)": [[6, "thirdai.neural_db.CSV.strong_text"]], "strong_text() (thirdai.neural_db.inmemorytext method)": [[6, "thirdai.neural_db.InMemoryText.strong_text"]], "strong_text() (thirdai.neural_db.url method)": [[6, "thirdai.neural_db.URL.strong_text"]], "strong_text_from_chunk() (thirdai.neural_db.sqldatabase method)": [[6, "thirdai.neural_db.SQLDatabase.strong_text_from_chunk"]], "strong_text_from_chunk() (thirdai.neural_db.salesforce method)": [[6, "thirdai.neural_db.SalesForce.strong_text_from_chunk"]], "strong_text_from_row() (thirdai.neural_db.csv method)": [[6, "thirdai.neural_db.CSV.strong_text_from_row"]], "supervised_train() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.supervised_train"]], "supervised_train_with_ref_ids() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.supervised_train_with_ref_ids"]], "text (thirdai.neural_db.reference property)": [[6, "thirdai.neural_db.Reference.text"]], "text_to_result() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.text_to_result"]], "text_to_result_batch() (thirdai.neural_db.neuraldb method)": [[6, "thirdai.neural_db.NeuralDB.text_to_result_batch"]], "train() (thirdai.neural_db.modelbazaar method)": [[6, "thirdai.neural_db.ModelBazaar.train"]], "undeploy() (thirdai.neural_db.modelbazaar method)": [[6, "thirdai.neural_db.ModelBazaar.undeploy"]], "upvote() (thirdai.neural_db.model_bazaar.client.bazaar_client.neuraldbclient method)": [[6, "thirdai.neural_db.model_bazaar.client.bazaar_client.NeuralDBClient.upvote"]], "upvote_ids (thirdai.neural_db.reference property)": [[6, "thirdai.neural_db.Reference.upvote_ids"]], "valid_id_column() (thirdai.neural_db.csv method)": [[6, "thirdai.neural_db.CSV.valid_id_column"]], "weak_text() (thirdai.neural_db.csv method)": [[6, "thirdai.neural_db.CSV.weak_text"]], "weak_text() (thirdai.neural_db.inmemorytext method)": [[6, "thirdai.neural_db.InMemoryText.weak_text"]], "weak_text() (thirdai.neural_db.url method)": [[6, "thirdai.neural_db.URL.weak_text"]], "weak_text_from_chunk() (thirdai.neural_db.sqldatabase method)": [[6, "thirdai.neural_db.SQLDatabase.weak_text_from_chunk"]], "weak_text_from_chunk() (thirdai.neural_db.salesforce method)": [[6, "thirdai.neural_db.SalesForce.weak_text_from_chunk"]], "weak_text_from_row() (thirdai.neural_db.csv method)": [[6, "thirdai.neural_db.CSV.weak_text_from_row"]]}})